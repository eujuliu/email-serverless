services:
  postgres:
    image: "postgres:14.7-alpine"
    restart: unless-stopped
    container_name: "postgres"
    env_file: ./.env.docker
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 10s
      timeout: 3s
      retries: 3

  redis:
    image: redis/redis-stack
    restart: unless-stopped
    container_name: redis
    env_file: ./.env.docker
    ports:
      - "6379:6379"
      - "8001:8001"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  app:
    build:
      context: .
      dockerfile: Dockerfile.development
    restart: unless-stopped
    container_name: app
    env_file: ./.env.docker
    ports:
      - ${PORT}:${PORT}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

    develop:
      watch:
        - action: sync+restart
          path: ./
          target: /app/
          ignore:
            - node_modules/
            - .gitignore
            - .github
            - docker*
            - "*.test.ts"
        - action: rebuild
          path: ./env*
          target: /app/
          ignore:
            - "!.env*"

  # ngrok:
  #   image: ngrok/ngrok:latest
  #   restart: unless-stopped
  #   container_name: ngrok
  #   command:
  #     - "http"
  #     - "--url=${NGROK_URL}"
  #     - "http://app:${PORT}"
  #   env_file: ./.env.docker
  #   ports:
  #     - 4040:4040
