// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  username       String   @unique @db.VarChar(20)
  email          String   @unique @db.VarChar(255)
  password       String   @db.VarChar(72)
  credits        Int
  frozenCredits  Int      @map("frozen_credits")

  emails         Email[]
  tasks          Task[]

  @@index([email, username])
  @@map("users")
}

model Email {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  audience  String[]
  subject   String
  html      String

  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  status    EmailStatus @default(DRAFT)

  @@index([userId])
  @@map("emails")
}

model Task {
  id             String   @id @default(uuid())
  createdAt      DateTime @default(now()) @map("created_at")
  updatedAt      DateTime @updatedAt @map("updated_at")
  type           String   @db.VarChar(50)
  cost           Int
  runAt          DateTime @map("run_at")
  timezone       String
  retries        Int
  priority       Int
  referenceId    String   @db.VarChar(128) @map("reference_id")
  idempotencyKey String   @db.VarChar(128) @map("idempotency_key")

  userId         String   @map("user_id")
  user           User     @relation(fields: [userId], references: [id], onDelete: NoAction)

  status         TaskStatus @default(PENDING)

  @@index([userId])
  @@map("tasks")
}

enum TaskStatus {
  PENDING
  RUNNING
  COMPLETED
  FAILED
  CANCELED
}

enum EmailStatus {
  DRAFT
  SCHEDULED
}
